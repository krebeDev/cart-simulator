{"version":3,"sources":["components/navbar.jsx","components/counter.jsx","components/counters.jsx","App.js","index.js"],"names":["Navbar","totalCounters","className","Counter","formatCount","value","props","counter","this","getBadgeClasses","onClick","onIncrement","onDelete","id","classes","Component","Counters","onReset","counters","map","key","App","handleReset","state","c","setState","handleIncrement","index","indexOf","handleDelete","counterId","filter","length","ReactDOM","render","document","getElementById"],"mappings":"ySAgBeA,EAdA,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACZ,OACM,yBACMC,UAAU,gCACV,4BAAQA,UAAU,oBAAlB,SACO,IACP,0BAAMA,UAAU,oCACTD,MC0BVE,G,iNAZTC,YAAc,WAAO,IACPC,EAAU,EAAKC,MAAMC,QAArBF,MACR,OAAiB,IAAVA,EAAc,OAASA,G,wEAtB1B,IAAD,OACH,OACM,6BACM,0BAAMH,UAAWM,KAAKC,mBAAoBD,KAAKJ,eAE/C,4BACMM,QAAS,kBAAM,EAAKJ,MAAMK,YAAY,EAAKL,MAAMC,UACjDL,UAAU,4BAFhB,aAMA,4BACMQ,QAAS,kBAAM,EAAKJ,MAAMM,SAAS,EAAKN,MAAMC,QAAQM,KACtDX,UAAU,6BAFhB,a,wCAeZ,IAAIY,EAAU,mBAEd,OADAA,GAAyC,IAA7BN,KAAKF,MAAMC,QAAQF,MAAe,UAAY,c,GA5BhDU,cCwBPC,E,iLAtBC,IAAD,EACkDR,KAAKF,MAAlDW,EADL,EACKA,QAASL,EADd,EACcA,SAAUD,EADxB,EACwBA,YAAaO,EADrC,EACqCA,SACxC,OACM,6BACM,4BACMhB,UAAU,6BACVQ,QAASO,GAFf,SAMAC,EAASC,KAAI,SAAAZ,GAAO,OACnB,kBAAC,EAAD,CACKa,IAAKb,EAAQM,GACbD,SAAUA,EACVD,YAAaA,EACbJ,QAAUA,Y,GAhBjBQ,aCoDRM,E,YAjDb,WAAYf,GAAQ,IAAD,8BACjB,4CAAMA,KAWRgB,YAAc,WACZ,IAAMJ,EAAW,EAAKK,MAAML,SAASC,KAAI,SAAAK,GAEnC,OADAA,EAAEnB,MAAQ,EACHmB,KAGb,EAAKC,SAAS,CAAEP,cAlBC,EAqBrBQ,gBAAkB,SAACnB,GAChB,IAAMW,EAAQ,YAAO,EAAKK,MAAML,UAC1BS,EAAQT,EAASU,QAAQrB,GAC/BW,EAASS,GAAT,eAAsBpB,GACtBW,EAASS,GAAOtB,QAChB,EAAKoB,SAAS,CAAEP,cA1BE,EA6BrBW,aAAe,SAACC,GACX,IAAMZ,EAAW,EAAKK,MAAML,SAASa,QAAO,SAAAP,GAAC,OAAIA,EAAEX,KAAOiB,KAC1D,EAAKL,SAAS,CAAEP,cA7BjB,EAAKK,MAAQ,CACXL,SAAU,CACJ,CAAEL,GAAI,EAAGR,MAAO,GAChB,CAAEQ,GAAI,EAAGR,MAAO,GAChB,CAAEQ,GAAI,EAAGR,MAAO,GAChB,CAAEQ,GAAI,EAAGR,MAAO,KAPP,E,sEAkCjB,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAQJ,cAAeO,KAAKe,MAAML,SAASa,QAAO,SAAAP,GAAC,OAAIA,EAAEnB,MAAQ,KAAG2B,SACtE,0BAAM9B,UAAU,aACd,kBAAC,EAAD,CACEgB,SAAUV,KAAKe,MAAML,SACrBN,SAAUJ,KAAKqB,aACfZ,QAAST,KAAKc,YACdX,YAAaH,KAAKkB,wB,GA3CVX,a,MCElBkB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2f0c74de.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navbar = ({ totalCounters }) => {\r\n      return ( \r\n            <nav \r\n                  className=\"navbar navbar-light bg-light\">\r\n                  <button className=\"navbar-brand btn\">\r\n                  Navbar{\" \"}\r\n                  <span className=\"badge badge-pill badge-secondary\">\r\n                        {totalCounters}\r\n                  </span>\r\n                  </button>\r\n          </nav> \r\n       );\r\n}\r\n \r\nexport default Navbar;","import React, { Component } from 'react';\r\n\r\nclass Counter extends Component {    \r\n      render() { \r\n            return (\r\n                  <div>\r\n                        <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\r\n\r\n                        <button \r\n                              onClick={() => this.props.onIncrement(this.props.counter)} \r\n                              className='btn btn-secondary btn-sm'>\r\n                              Increment\r\n                        </button>\r\n\r\n                        <button \r\n                              onClick={() => this.props.onDelete(this.props.counter.id)} \r\n                              className=\"btn btn-danger btn-sm m-2\">\r\n                              Delete\r\n                        </button>\r\n                  </div>\r\n            );\r\n      }\r\n\r\n      formatCount = () => {\r\n            const { value } = this.props.counter;\r\n            return value === 0 ? 'Zero' : value;\r\n      }\r\n\r\n      getBadgeClasses() {\r\n            let classes = 'badge m-2 badge-';\r\n            classes += (this.props.counter.value === 0) ? 'warning' : 'primary';\r\n            return classes;\r\n      }\r\n}\r\n\r\nexport default Counter;","import React, { Component } from 'react';\r\nimport Counter from './counter';\r\n\r\nclass Counters extends Component {\r\n      render() { \r\n            const { onReset, onDelete, onIncrement, counters } = this.props\r\n            return ( \r\n                  <div>\r\n                        <button \r\n                              className=\"btn btn-primary btn-sm m-2\" \r\n                              onClick={onReset}>\r\n                              Reset\r\n                        </button>\r\n\r\n                       {counters.map(counter => (\r\n                         <Counter \r\n                              key={counter.id} \r\n                              onDelete={onDelete} \r\n                              onIncrement={onIncrement}\r\n                              counter={ counter } />\r\n                       ))}\r\n                  </div>\r\n             );\r\n      \r\n}\r\n}\r\nexport default Counters;","import React, { Fragment, Component } from 'react';\nimport Navbar from './components/navbar';\nimport './App.css';\nimport Counters from './components/counters'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counters: [\n            { id: 1, value: 0 },\n            { id: 2, value: 0 },\n            { id: 3, value: 0 },\n            { id: 4, value: 0 }\n      ]\n     };\n  }\n\n  handleReset = () => {\n    const counters = this.state.counters.map(c => {\n          c.value = 0;\n          return c;\n    });\n    \n    this.setState({ counters });\n}\n\nhandleIncrement = (counter) => {\n   const counters = [...this.state.counters];\n   const index = counters.indexOf(counter);\n   counters[index] = {...counter};\n   counters[index].value++;\n   this.setState({ counters });\n}\n\nhandleDelete = (counterId) => {\n     const counters = this.state.counters.filter(c => c.id !== counterId);\n     this.setState({ counters });\n}\n  render() { \n    return (\n      <Fragment>\n        <Navbar totalCounters={this.state.counters.filter(c => c.value > 0).length} />\n      <main className='container'> \n        <Counters \n          counters={this.state.counters}\n          onDelete={this.handleDelete} \n          onReset={this.handleReset} \n          onIncrement={this.handleIncrement} />\n        </main>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}